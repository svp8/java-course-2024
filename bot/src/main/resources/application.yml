app:
  telegram-token: ${TELEGRAMTOKEN}
  kafka:
    enabled: false
    topic: update
springdoc:
  swagger-ui:
    path: /swagger-ui
spring:
  kafka:
    bootstrap-servers: localhost:29092
    consumer:
      properties:
        spring.json.type.mapping: "edu.java.dto.Update: edu.java.bot.model.scrapper.Update"
        spring.json.trusted.packages: "*"
      group-id: 1
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
  application:
    name: bot
  jackson:
    time-zone: UTC
  cache:
    cache-names:
      - rate-limit-buckets
    caffeine:
      spec: maximumSize=100000,expireAfterAccess=3600s
client:
  scrapper:
    baseurl: http://localhost:8081
    retry:
      enable: true
      type: linear
      base-delay-ms: 100
      retry-on-codes: [ 404,500 ]
server:
  port: 8090

management:
  export:
    prometheus:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}
  endpoints:
    web:
      exposure.include: health,info,prometheus
      base-path: /
      path-mapping:
        health: health
        prometheus: metrics
  server:
    port: 8030

bucket4j:
  enabled: true
  filters:
    - cache-name: rate-limit-buckets
      strategy: first
      http-response-body: "{ \"status\": 429, \"error\": \"Too Many Requests\", \"message\": \"You have exhausted your API Request Quota\" }"
      rate-limits:
        - cache-key: "getRemoteAddr()"
          bandwidths:
            - capacity: 20
              time: 10
              unit: seconds
logging:
  config: classpath:log4j2-plain.xml
