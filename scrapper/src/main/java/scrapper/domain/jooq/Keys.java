/*
 * This file is generated by jOOQ.
 */
package scrapper.domain.jooq;


import javax.annotation.processing.Generated;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;

import scrapper.domain.jooq.tables.Answer;
import scrapper.domain.jooq.tables.Branch;
import scrapper.domain.jooq.tables.Chat;
import scrapper.domain.jooq.tables.ChatLink;
import scrapper.domain.jooq.tables.Comment;
import scrapper.domain.jooq.tables.Link;
import scrapper.domain.jooq.tables.PullRequest;
import scrapper.domain.jooq.tables.records.AnswerRecord;
import scrapper.domain.jooq.tables.records.BranchRecord;
import scrapper.domain.jooq.tables.records.ChatLinkRecord;
import scrapper.domain.jooq.tables.records.ChatRecord;
import scrapper.domain.jooq.tables.records.CommentRecord;
import scrapper.domain.jooq.tables.records.LinkRecord;
import scrapper.domain.jooq.tables.records.PullRequestRecord;


/**
 * A class modelling foreign key relationships and constraints of tables in the
 * default schema.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AnswerRecord> ANSWER_PKEY = Internal.createUniqueKey(Answer.ANSWER, DSL.name("ANSWER_PKEY"), new TableField[] { Answer.ANSWER.ID }, true);
    public static final UniqueKey<BranchRecord> BRANCH_PKEY = Internal.createUniqueKey(Branch.BRANCH, DSL.name("BRANCH_PKEY"), new TableField[] { Branch.BRANCH.NAME, Branch.BRANCH.LINK_ID }, true);
    public static final UniqueKey<ChatRecord> CONSTRAINT_1 = Internal.createUniqueKey(Chat.CHAT, DSL.name("CONSTRAINT_1"), new TableField[] { Chat.CHAT.ID }, true);
    public static final UniqueKey<ChatLinkRecord> CHAY_LINK_PKEY = Internal.createUniqueKey(ChatLink.CHAT_LINK, DSL.name("CHAY_LINK_PKEY"), new TableField[] { ChatLink.CHAT_LINK.CHAT_ID, ChatLink.CHAT_LINK.LINK_ID }, true);
    public static final UniqueKey<CommentRecord> COMMENT_PKEY = Internal.createUniqueKey(Comment.COMMENT, DSL.name("COMMENT_PKEY"), new TableField[] { Comment.COMMENT.ID }, true);
    public static final UniqueKey<LinkRecord> CONSTRAINT_2 = Internal.createUniqueKey(Link.LINK, DSL.name("CONSTRAINT_2"), new TableField[] { Link.LINK.ID }, true);
    public static final UniqueKey<LinkRecord> CONSTRAINT_23 = Internal.createUniqueKey(Link.LINK, DSL.name("CONSTRAINT_23"), new TableField[] { Link.LINK.NAME }, true);
    public static final UniqueKey<PullRequestRecord> PULL_REQUEST_PKEY = Internal.createUniqueKey(PullRequest.PULL_REQUEST, DSL.name("PULL_REQUEST_PKEY"), new TableField[] { PullRequest.PULL_REQUEST.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AnswerRecord, LinkRecord> CONSTRAINT_73 = Internal.createForeignKey(Answer.ANSWER, DSL.name("CONSTRAINT_73"), new TableField[] { Answer.ANSWER.LINK_ID }, Keys.CONSTRAINT_2, new TableField[] { Link.LINK.ID }, true);
    public static final ForeignKey<BranchRecord, LinkRecord> CONSTRAINT_7 = Internal.createForeignKey(Branch.BRANCH, DSL.name("CONSTRAINT_7"), new TableField[] { Branch.BRANCH.LINK_ID }, Keys.CONSTRAINT_2, new TableField[] { Link.LINK.ID }, true);
    public static final ForeignKey<ChatLinkRecord, ChatRecord> CONSTRAINT_8 = Internal.createForeignKey(ChatLink.CHAT_LINK, DSL.name("CONSTRAINT_8"), new TableField[] { ChatLink.CHAT_LINK.CHAT_ID }, Keys.CONSTRAINT_1, new TableField[] { Chat.CHAT.ID }, true);
    public static final ForeignKey<ChatLinkRecord, LinkRecord> CONSTRAINT_86 = Internal.createForeignKey(ChatLink.CHAT_LINK, DSL.name("CONSTRAINT_86"), new TableField[] { ChatLink.CHAT_LINK.LINK_ID }, Keys.CONSTRAINT_2, new TableField[] { Link.LINK.ID }, true);
    public static final ForeignKey<CommentRecord, LinkRecord> CONSTRAINT_6 = Internal.createForeignKey(Comment.COMMENT, DSL.name("CONSTRAINT_6"), new TableField[] { Comment.COMMENT.LINK_ID }, Keys.CONSTRAINT_2, new TableField[] { Link.LINK.ID }, true);
    public static final ForeignKey<PullRequestRecord, LinkRecord> CONSTRAINT_5 = Internal.createForeignKey(PullRequest.PULL_REQUEST, DSL.name("CONSTRAINT_5"), new TableField[] { PullRequest.PULL_REQUEST.LINK_ID }, Keys.CONSTRAINT_2, new TableField[] { Link.LINK.ID }, true);
}
